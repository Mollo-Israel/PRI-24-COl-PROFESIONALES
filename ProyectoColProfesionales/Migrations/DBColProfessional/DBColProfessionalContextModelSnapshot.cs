// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProyectoColProfesionales.Models.DB1;

#nullable disable

namespace ProyectoColProfesionales.Migrations.DBColProfessional
{
    [DbContext(typeof(DBColProfessionalContext))]
    partial class DBColProfessionalContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ProyectoColProfesionales.Models.DB1.Activity", b =>
                {
                    b.Property<int>("IdActivity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idActivity");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdActivity"), 1L, 1);

                    b.Property<string>("Auditorium")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("auditorium");

                    b.Property<DateTime>("DateActivity")
                        .HasColumnType("datetime")
                        .HasColumnName("dateActivity");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("description");

                    b.Property<bool?>("HasAssistance")
                        .HasColumnType("bit")
                        .HasColumnName("hasAssistance");

                    b.Property<bool?>("HasPayment")
                        .HasColumnType("bit")
                        .HasColumnName("hasPayment");

                    b.Property<int>("IdThesis")
                        .HasColumnType("int")
                        .HasColumnName("idThesis");

                    b.Property<int?>("IdUserLastUpdate")
                        .HasColumnType("int")
                        .HasColumnName("idUserLastUpdate");

                    b.Property<int?>("IdUserRegister")
                        .HasColumnType("int")
                        .HasColumnName("idUserRegister");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime")
                        .HasColumnName("lastUpdate");

                    b.Property<string>("Latitude")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("latitude");

                    b.Property<string>("Longitude")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("longitude");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("place");

                    b.Property<DateTime>("RegisterDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("registerDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("StateActivity")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("stateActivity");

                    b.Property<byte>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("IdActivity");

                    b.HasIndex("IdThesis");

                    b.ToTable("Activity");
                });

            modelBuilder.Entity("ProyectoColProfesionales.Models.DB1.ActivityProfessional", b =>
                {
                    b.Property<int>("IdActivityProfessional")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idActivityProfessional");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdActivityProfessional"), 1L, 1);

                    b.Property<int>("IdActivity")
                        .HasColumnType("int")
                        .HasColumnName("idActivity");

                    b.Property<int>("IdProfessional")
                        .HasColumnType("int")
                        .HasColumnName("idProfessional");

                    b.HasKey("IdActivityProfessional");

                    b.HasIndex("IdActivity");

                    b.HasIndex("IdProfessional");

                    b.ToTable("ActivityProfessional");
                });

            modelBuilder.Entity("ProyectoColProfesionales.Models.DB1.ActivityVoucher", b =>
                {
                    b.Property<int>("IdActivityVoucher")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idActivityVoucher");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdActivityVoucher"), 1L, 1);

                    b.Property<int>("IdActivity")
                        .HasColumnType("int")
                        .HasColumnName("idActivity");

                    b.Property<string>("NameFile")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nameFile");

                    b.Property<byte[]>("VoucherFile")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("voucherFile");

                    b.Property<string>("VoucherType")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("voucherType");

                    b.HasKey("IdActivityVoucher");

                    b.HasIndex("IdActivity");

                    b.ToTable("ActivityVoucher");
                });

            modelBuilder.Entity("ProyectoColProfesionales.Models.DB1.Letter", b =>
                {
                    b.Property<int>("IdLetter")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idLetter");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLetter"), 1L, 1);

                    b.Property<string>("Format")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("format");

                    b.Property<int?>("IdActivity")
                        .HasColumnType("int")
                        .HasColumnName("idActivity");

                    b.Property<int?>("IdProfessional")
                        .HasColumnType("int")
                        .HasColumnName("idProfessional");

                    b.Property<int?>("IdUserLastUpdate")
                        .HasColumnType("int")
                        .HasColumnName("idUserLastUpdate");

                    b.Property<int?>("IdUserRegister")
                        .HasColumnType("int")
                        .HasColumnName("idUserRegister");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime")
                        .HasColumnName("lastUpdate");

                    b.Property<DateTime>("RegisterDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("registerDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<byte>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("IdLetter");

                    b.HasIndex("IdActivity");

                    b.HasIndex("IdProfessional");

                    b.ToTable("Letter");
                });

            modelBuilder.Entity("ProyectoColProfesionales.Models.DB1.Notification", b =>
                {
                    b.Property<int>("IdNotification")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idNotification");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdNotification"), 1L, 1);

                    b.Property<DateTime?>("DateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("dateTime");

                    b.Property<int?>("IdLetter")
                        .HasColumnType("int")
                        .HasColumnName("idLetter");

                    b.Property<int?>("IdProfessional")
                        .HasColumnType("int")
                        .HasColumnName("idProfessional");

                    b.Property<int?>("IdUserLastUpdate")
                        .HasColumnType("int")
                        .HasColumnName("idUserLastUpdate");

                    b.Property<int?>("IdUserRegister")
                        .HasColumnType("int")
                        .HasColumnName("idUserRegister");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime")
                        .HasColumnName("lastUpdate");

                    b.Property<string>("Message")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("message");

                    b.Property<DateTime>("RegisterDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("registerDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<byte>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("IdNotification");

                    b.HasIndex("IdLetter");

                    b.HasIndex("IdProfessional");

                    b.ToTable("Notification");
                });

            modelBuilder.Entity("ProyectoColProfesionales.Models.DB1.Notification2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("Date1")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Date2")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Date3")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdPerson")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.HasIndex("IdPerson");

                    b.ToTable("Notifications2");
                });

            modelBuilder.Entity("ProyectoColProfesionales.Models.DB1.Person", b =>
                {
                    b.Property<int>("IdPerson")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idPerson");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPerson"), 1L, 1);

                    b.Property<string>("Email")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("email");

                    b.Property<int?>("IdUserLastUpdate")
                        .HasColumnType("int")
                        .HasColumnName("idUserLastUpdate");

                    b.Property<int?>("IdUserRegister")
                        .HasColumnType("int")
                        .HasColumnName("idUserRegister");

                    b.Property<string>("IdentityNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("identityNumber");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime")
                        .HasColumnName("lastUpdate");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("varchar(35)")
                        .HasColumnName("lastname");

                    b.Property<string>("Names")
                        .IsRequired()
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("names");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("phoneNumber");

                    b.Property<DateTime>("RegisterDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("registerDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("SecondLastName")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("varchar(35)")
                        .HasColumnName("secondLastName");

                    b.Property<byte>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("IdPerson");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("ProyectoColProfesionales.Models.DB1.Professional", b =>
                {
                    b.Property<int>("IdProfessional")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idProfessional");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProfessional"), 1L, 1);

                    b.Property<string>("Career")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("career");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("code");

                    b.Property<int>("IdPerson")
                        .HasColumnType("int")
                        .HasColumnName("idPerson");

                    b.Property<int?>("IdUserLastUpdate")
                        .HasColumnType("int")
                        .HasColumnName("idUserLastUpdate");

                    b.Property<int?>("IdUserRegister")
                        .HasColumnType("int")
                        .HasColumnName("idUserRegister");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime")
                        .HasColumnName("lastUpdate");

                    b.Property<DateTime>("RegisterDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("registerDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Specialty")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("specialty");

                    b.Property<byte>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("University")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("university");

                    b.HasKey("IdProfessional");

                    b.HasIndex("IdPerson");

                    b.ToTable("Professional");
                });

            modelBuilder.Entity("ProyectoColProfesionales.Models.DB1.Thesis", b =>
                {
                    b.Property<int>("IdThesis")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idThesis");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdThesis"), 1L, 1);

                    b.Property<string>("Career")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("career");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("description");

                    b.Property<int?>("IdUserLastUpdate")
                        .HasColumnType("int")
                        .HasColumnName("idUserLastUpdate");

                    b.Property<int?>("IdUserRegister")
                        .HasColumnType("int")
                        .HasColumnName("idUserRegister");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime")
                        .HasColumnName("lastUpdate");

                    b.Property<DateTime>("RegisterDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("registerDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<byte>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Student")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("student");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("type");

                    b.HasKey("IdThesis");

                    b.ToTable("Thesis");
                });

            modelBuilder.Entity("ProyectoColProfesionales.Models.DB1.ThesisFile", b =>
                {
                    b.Property<int>("IdThesisFile")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idThesisFile");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdThesisFile"), 1L, 1);

                    b.Property<byte[]>("DataFile")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("IdThesis")
                        .HasColumnType("int")
                        .HasColumnName("idThesis");

                    b.Property<string>("NameFile")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nameFile");

                    b.Property<string>("ThesisType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdThesisFile");

                    b.HasIndex("IdThesis");

                    b.ToTable("ThesisFile");
                });

            modelBuilder.Entity("ProyectoColProfesionales.Models.DB1.User", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idUser");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUser"), 1L, 1);

                    b.Property<int>("IdPerson")
                        .HasColumnType("int")
                        .HasColumnName("idPerson");

                    b.Property<int?>("IdUserLastUpdate")
                        .HasColumnType("int")
                        .HasColumnName("idUserLastUpdate");

                    b.Property<int?>("IdUserRegister")
                        .HasColumnType("int")
                        .HasColumnName("idUserRegister");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime")
                        .HasColumnName("lastUpdate");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("password");

                    b.Property<DateTime>("RegisterDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("registerDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("role");

                    b.Property<byte>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("varchar(35)")
                        .HasColumnName("userName");

                    b.HasKey("IdUser");

                    b.HasIndex("IdPerson");

                    b.ToTable("User");
                });

            modelBuilder.Entity("ProyectoColProfesionales.Models.DB1.Activity", b =>
                {
                    b.HasOne("ProyectoColProfesionales.Models.DB1.Thesis", "IdThesisNavigation")
                        .WithMany("Activities")
                        .HasForeignKey("IdThesis")
                        .IsRequired()
                        .HasConstraintName("FK_Activity_Thesis");

                    b.Navigation("IdThesisNavigation");
                });

            modelBuilder.Entity("ProyectoColProfesionales.Models.DB1.ActivityProfessional", b =>
                {
                    b.HasOne("ProyectoColProfesionales.Models.DB1.Activity", "IdActivityNavigation")
                        .WithMany("ActivityProfessionals")
                        .HasForeignKey("IdActivity")
                        .IsRequired()
                        .HasConstraintName("FK_ActivityProfessional_Activity");

                    b.HasOne("ProyectoColProfesionales.Models.DB1.Professional", "IdProfessionalNavigation")
                        .WithMany("ActivityProfessionals")
                        .HasForeignKey("IdProfessional")
                        .IsRequired()
                        .HasConstraintName("FK_ActivityProfessional_Professional");

                    b.Navigation("IdActivityNavigation");

                    b.Navigation("IdProfessionalNavigation");
                });

            modelBuilder.Entity("ProyectoColProfesionales.Models.DB1.ActivityVoucher", b =>
                {
                    b.HasOne("ProyectoColProfesionales.Models.DB1.Activity", "IdActivityNavigation")
                        .WithMany("ActivityVouchers")
                        .HasForeignKey("IdActivity")
                        .IsRequired()
                        .HasConstraintName("FK_ActivityVoucher_Activity");

                    b.Navigation("IdActivityNavigation");
                });

            modelBuilder.Entity("ProyectoColProfesionales.Models.DB1.Letter", b =>
                {
                    b.HasOne("ProyectoColProfesionales.Models.DB1.Activity", "IdActivityNavigation")
                        .WithMany("Letters")
                        .HasForeignKey("IdActivity")
                        .HasConstraintName("FK_Letter_Activity");

                    b.HasOne("ProyectoColProfesionales.Models.DB1.Professional", "IdProfessionalNavigation")
                        .WithMany("Letters")
                        .HasForeignKey("IdProfessional")
                        .HasConstraintName("FK_Letter_Professional1");

                    b.Navigation("IdActivityNavigation");

                    b.Navigation("IdProfessionalNavigation");
                });

            modelBuilder.Entity("ProyectoColProfesionales.Models.DB1.Notification", b =>
                {
                    b.HasOne("ProyectoColProfesionales.Models.DB1.Letter", "IdLetterNavigation")
                        .WithMany("Notifications")
                        .HasForeignKey("IdLetter")
                        .HasConstraintName("FK_Notification_Letter");

                    b.HasOne("ProyectoColProfesionales.Models.DB1.Professional", "IdProfessionalNavigation")
                        .WithMany("Notifications")
                        .HasForeignKey("IdProfessional")
                        .HasConstraintName("FK_Notification_Professional1");

                    b.Navigation("IdLetterNavigation");

                    b.Navigation("IdProfessionalNavigation");
                });

            modelBuilder.Entity("ProyectoColProfesionales.Models.DB1.Notification2", b =>
                {
                    b.HasOne("ProyectoColProfesionales.Models.DB1.Person", "Person")
                        .WithMany("Notifications2")
                        .HasForeignKey("IdPerson")
                        .IsRequired()
                        .HasConstraintName("FK_Notification2_Person");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("ProyectoColProfesionales.Models.DB1.Professional", b =>
                {
                    b.HasOne("ProyectoColProfesionales.Models.DB1.Person", "IdPersonNavigation")
                        .WithMany("Professionals")
                        .HasForeignKey("IdPerson")
                        .IsRequired()
                        .HasConstraintName("FK_Professional_Person1");

                    b.Navigation("IdPersonNavigation");
                });

            modelBuilder.Entity("ProyectoColProfesionales.Models.DB1.ThesisFile", b =>
                {
                    b.HasOne("ProyectoColProfesionales.Models.DB1.Thesis", "IdThesisNavigation")
                        .WithMany("ThesisFiles")
                        .HasForeignKey("IdThesis")
                        .IsRequired()
                        .HasConstraintName("FK_ThesisFile_Thesis");

                    b.Navigation("IdThesisNavigation");
                });

            modelBuilder.Entity("ProyectoColProfesionales.Models.DB1.User", b =>
                {
                    b.HasOne("ProyectoColProfesionales.Models.DB1.Person", "IdPersonNavigation")
                        .WithMany("Users")
                        .HasForeignKey("IdPerson")
                        .IsRequired()
                        .HasConstraintName("FK_User_Person");

                    b.Navigation("IdPersonNavigation");
                });

            modelBuilder.Entity("ProyectoColProfesionales.Models.DB1.Activity", b =>
                {
                    b.Navigation("ActivityProfessionals");

                    b.Navigation("ActivityVouchers");

                    b.Navigation("Letters");
                });

            modelBuilder.Entity("ProyectoColProfesionales.Models.DB1.Letter", b =>
                {
                    b.Navigation("Notifications");
                });

            modelBuilder.Entity("ProyectoColProfesionales.Models.DB1.Person", b =>
                {
                    b.Navigation("Notifications2");

                    b.Navigation("Professionals");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("ProyectoColProfesionales.Models.DB1.Professional", b =>
                {
                    b.Navigation("ActivityProfessionals");

                    b.Navigation("Letters");

                    b.Navigation("Notifications");
                });

            modelBuilder.Entity("ProyectoColProfesionales.Models.DB1.Thesis", b =>
                {
                    b.Navigation("Activities");

                    b.Navigation("ThesisFiles");
                });
#pragma warning restore 612, 618
        }
    }
}
